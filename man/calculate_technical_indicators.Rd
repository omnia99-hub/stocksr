% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tech_indicators.R
\name{calculate_technical_indicators}
\alias{calculate_technical_indicators}
\title{Calculate Technical Indicators}
\usage{
calculate_technical_indicators(df)
}
\arguments{
\item{df}{A data frame with at least two columns:
\describe{
  \item{Date}{A date column.}
  \item{sector_index}{A numeric column representing sector-level index
  or price.}
}}
}
\value{
A data frame with the original columns plus additional columns:
\describe{
  \item{returns}{Daily returns based on sector index.}
  \item{MA5, MA10, MA20}{Simple Moving Averages over 5, 10, and 20 days.}
  \item{EMA5, EMA10}{Exponential Moving Averages over 5 and 10 days.}
  \item{volatility5, volatility10}{Rolling standard deviation (volatility).}
  \item{RSI}{Relative Strength Index computed over a 14-day window.}
  \item{lag_1 to lag_5}{Lagged values of sector index from previous 1 to 5
  days.}
  \item{returns_lag_1 to returns_lag_5}{Lagged values of daily returns.}
}
}
\description{
Enhances a sector index time series by computing common technical indicators,
including moving averages (SMA, EMA), volatility, Relative Strength Index
(RSI), and lagged features. Useful for feature engineering in financial
modeling and machine learning.
}
\examples{
# Simulated example of sector index data
set.seed(42)
sample_dates <- seq.Date(from = as.Date("2024-01-01"),
                         by = "day", length.out = 100)
sample_index <- cumsum(rnorm(100, mean = 0.1, sd = 1))

df <- data.frame(Date = sample_dates, sector_index = sample_index)

# Calculate technical indicators
df_with_indicators <- calculate_technical_indicators(df)

# View first few rows
head(df_with_indicators)
}
