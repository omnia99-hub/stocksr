% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_data_for_lstm.R
\name{prepare_data_for_lstm}
\alias{prepare_data_for_lstm}
\title{Prepare Data for LSTM Model}
\usage{
prepare_data_for_lstm(data, time_steps = 10)
}
\arguments{
\item{data}{A data frame containing at least a `sector_index` and `Date`
column.}

\item{time_steps}{(int, default = 10) Number of time steps in each input
sequence.}
}
\value{
A list with the following elements:
- `x`: Input features as a torch tensor of shape (samples, time_steps,
   features).
- `y`: Target values as a torch tensor of shape (samples,).
- `target_mean`: Mean of the original target variable.
- `target_sd`: Standard deviation of the original target variable.
- `feature_names`: Names of the selected features.
- `dates`: Corresponding dates for the target values (after time_steps).
}
\description{
This function takes a dataset with a `sector_index` column, computes simple
returns, creates lagged variables, removes missing values, and scales the
features and target. It then builds sequential batches for LSTM training and
returns them as torch tensors.
}
\details{
Prepares and scales a dataset for input into an LSTM model. It creates lagged
features, scales the features and target, and arranges the data into
sequences suitable for LSTM training.


- Calculates simple returns.
- Creates lagged features (`lag_1`, `lag_2`, `lag_5`).
- Standardizes features and target using mean and standard deviation.
- Splits data into input sequences of length `time_steps` and corresponding
  targets.
- Converts data into torch tensors.
}
\examples{
library(torch)

# Example with fake data
df <- data.frame(
  Date = seq(as.Date("2020-01-01"), by = "day", length.out = 100),
  sector_index = cumsum(rnorm(100))
)

prepared <- prepare_data_for_lstm(df, time_steps = 10)
x <- prepared$x
y <- prepared$y

print(dim(x))  # Should show (90, 10, 4)
print(length(y))  # Should be 90

}
